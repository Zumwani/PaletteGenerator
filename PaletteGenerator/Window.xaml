<Window x:Class="PaletteGenerator.Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:PaletteGenerator"
        xmlns:ui="clr-namespace:PaletteGenerator.UI"
        xmlns:converters="clr-namespace:PaletteGenerator.Converters"
        xmlns:commands="clr-namespace:PaletteGenerator.Commands"
        xmlns:mahApps="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        Title="Palette Generator" Height="528" Width="1250"
        WindowStartupLocation="CenterScreen" WindowStyle="None" 
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}" FontFamily="Segoe UI Semilight" AllowsTransparency="True"
        Loaded="Window_Loaded">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="{Binding ElementName=titlebar, Path=ActualHeight}" ResizeBorderThickness="5"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="/ColorPickerLib;component/Themes/LightBrushs.xaml"/>
                <ResourceDictionary Source="UI/Button.xaml"/>
                <ResourceDictionary Source="UI/Slider.xaml"/>
                <ResourceDictionary Source="UI/Row.xaml"/>
                
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="ToolButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
                <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="FontSize" Value="22"/>
                <Setter Property="DockPanel.Dock" Value="Right"/>
                <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
            </Style>

            <Style TargetType="{x:Type Border}" x:Key="Separator">
                <Setter Property="Width" Value="1"/>
                <Setter Property="Background" Value="DimGray"/>
                <Setter Property="DockPanel.Dock" Value="Right"/>
            </Style>
            
        </ResourceDictionary>
    </Window.Resources>

    <Border Background="White" BorderThickness="1" BorderBrush="Black">
        <Grid>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Border x:Name="loadingOverlay" Grid.Row="1" Grid.RowSpan="3" Background="Black" Opacity="0.5" Panel.ZIndex="100" Visibility="Collapsed">
                <mahApps:ProgressRing Foreground="White"/>
            </Border>
            
            <DockPanel x:Name="titlebar" Background="Transparent" Panel.ZIndex="200">

                <Button Content="" ToolTip="Close" Style="{StaticResource ToolButton}" Command="{commands:CloseWindow}" CommandParameter="{Binding}" WindowChrome.IsHitTestVisibleInChrome="True">
                    <Button.Background>
                        <SolidColorBrush Color="Red"/>
                    </Button.Background>
                </Button>

                <Button ToolTip="Maximize" ui:WindowUtility.IsMaximizeButton="True" Content="" Style="{StaticResource ToolButton}" Command="{commands:ToggleMaximizeWindow}" CommandParameter="{Binding}" WindowChrome.IsHitTestVisibleInChrome="True"/>
                <Button ToolTip="Minimize" Content="" Style="{StaticResource ToolButton}" Command="{commands:MinimizeWindow}" CommandParameter="{Binding}" WindowChrome.IsHitTestVisibleInChrome="True"/>
                <TextBlock Text="{Binding Title}" FontSize="16" DockPanel.Dock="Left" Padding="12"/>

            </DockPanel>

            <StackPanel Grid.Row="0" Grid.RowSpan="4" Margin="12" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="226">

                <ToggleButton x:Name="offsetsButton" IsHitTestVisible="{Binding ElementName=offsetsPopup, Path=IsOpen, Converter={converters:InvertBool}}" fa:Awesome.Content="ChevronUp" Width="Auto" Height="22"/>
                <DockPanel>
                    
                    <Button Click="Add" ToolTip="Add row" Content="" Style="{StaticResource ToolButton}" DockPanel.Dock="Right" Height="32" Margin="12,0,0,0"/>
                    
                    <Slider Value="{Binding Columns, Mode=TwoWay}" VerticalAlignment="Center" Minimum="{Binding MinColumns}" Maximum="{Binding MaxColumns}"
                            TickFrequency="2" SmallChange="2" LargeChange="2"/>
                
                </DockPanel>

                <Popup x:Name="offsetsPopup" IsOpen="{Binding ElementName=offsetsButton, Path=IsChecked}" StaysOpen="False" PopupAnimation="Fade" Placement="Top" PlacementTarget="{Binding ElementName=offsetsButton}">
                    <Border Background="White" BorderThickness="1" BorderBrush="Black">
                        <StackPanel Margin="12">

                            <TextBlock Text="Offsets:" FontSize="16" Margin="0,0,0,12"/>

                            <TextBlock Text="Hue" HorizontalAlignment="Center" FontSize="16"/>
                            <Slider Value="{Binding Hue, Mode=TwoWay}" Width="200"/>

                            <TextBlock Text="Saturation" HorizontalAlignment="Center" FontSize="16"/>
                            <Slider Value="{Binding Saturation, Mode=TwoWay}" Width="200"/>

                        </StackPanel>
                    </Border>
                </Popup>
                
            </StackPanel>
            
            <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
                <ItemsControl x:Name="list" ItemsSource="{Binding Rows}" Margin="42" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </ScrollViewer>
            
            <DockPanel Grid.Row="3" LastChildFill="False" Margin="12" HorizontalAlignment="Right">

                <Button Click="Update" ToolTip="Check for updates" Content="" Style="{StaticResource ToolButton}"/>

                <ToggleButton x:Name="presetsButton" Content="Presets" Width="Auto" DockPanel.Dock="Right" FontSize="18" Margin="12,0" Padding="12" 
                              IsChecked="{Binding ElementName=presetsMenu, Path=IsOpen, Mode=OneWay}" IsHitTestVisible="{Binding ElementName=presetsMenu, Path=IsOpen, Converter={converters:InvertBool}}"/>
                <Button Content="Export" Width="Auto" DockPanel.Dock="Right" FontSize="18" Padding="12" Command="{commands:Export}"/>

            </DockPanel>

            <Popup x:Name="presetsMenu" IsOpen="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.IsChecked}" PlacementTarget="{Binding ElementName=presetsButton}" Placement="Top" StaysOpen="False" PopupAnimation="Fade">
                <Border Background="White" BorderBrush="Black" BorderThickness="1">
                    <ItemsControl>
                        <MenuItem Header="Save..." Command="{commands:SavePreset}"/>
                        <MenuItem Header="Load..." Command="{commands:LoadPreset}"/>
                    </ItemsControl>
                </Border>
            </Popup>

        </Grid>
    </Border>

</Window>