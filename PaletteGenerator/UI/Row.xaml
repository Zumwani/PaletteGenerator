<UserControl x:Class="PaletteGenerator.Models.Row" x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PaletteGenerator"
             xmlns:converters="clr-namespace:PaletteGenerator.Converters"
             xmlns:ui="clr-namespace:PaletteGenerator.UI"
             xmlns:commands="clr-namespace:PaletteGenerator.Commands"
             xmlns:fa="http://schemas.fontawesome.com/icons/"
             xmlns:models="clr-namespace:PaletteGenerator.Models"
             xmlns:utilities="clr-namespace:PaletteGenerator.Utilities"
             x:Name="UserControl">

    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Button.xaml"/>
                <ResourceDictionary Source="Popups.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <Style TargetType="{x:Type ItemsControl}">

                <Setter Property="VirtualizingPanel.IsVirtualizing"     Value="True"/>
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>

                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="{x:Type Color}">
                            <Rectangle Width="64" Height="64" Fill="{Binding Converter={converters:ToBrush}}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.Style>
        <Style TargetType="{x:Type models:Row}">
            <Setter Property="Columns" Value="{Binding Source={x:Static models:Global.Columns}, Path=Value, Mode=OneWay}"/>
        </Style>
    </UserControl.Style>

    <StackPanel Orientation="Horizontal" Margin="0,3">

        <Border Background="Transparent" Height="64" Width="22">
            <ToggleButton x:Name="OffsetsButton" Width="22" Padding="6"
                          Visibility="{Binding Converter={converters:ShowIf}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsMouseOver, ConverterParameter={StaticResource True}}"
                          utilities:PopupUtility.Attach="{StaticResource Popups.RowOffsets}" DataContext="{Binding ElementName=UserControl}" utilities:PopupUtility.AttachedPopupPlacement="Left">
                <ToggleButton.Content>
                    <fa:ImageAwesome Icon="Solid_ChevronLeft" Foreground="DimGray"/>
                </ToggleButton.Content>
            </ToggleButton>
        </Border>

        <Border BorderBrush="LightGray" BorderThickness="1">
            <StackPanel Orientation="Horizontal" Margin="-1">
                <ui:ColorEditor x:Name="LeftColorPicker" GlobalColor="{Binding Source={x:Static models:Global.LeftColor}, Path=Value, Mode=TwoWay}" PopupPlacement="Left" BorderThickness="1,1,0,1"/>
                <ItemsControl ItemsSource="{Binding ElementName=UserControl, Path=LeftSide, Mode=OneWay}"/>
                <ui:ColorEditor x:Name="CenterColorPicker" Color="LightSkyBlue" GlobalColor="{Binding ElementName=UserControl, Path=CenterColor, Mode=TwoWay}" IsGlobalPicker="True" BorderThickness="0,1,0,1"/>
                <ItemsControl ItemsSource="{Binding ElementName=UserControl, Path=RightSide, Mode=OneWay}"/>
                <ui:ColorEditor x:Name="RightColorPicker" GlobalColor="{Binding Source={x:Static models:Global.RightColor}, Path=Value, Mode=TwoWay}" PopupPlacement="Right" BorderThickness="0,1,1,1"/>
            </StackPanel>
        </Border>

        <Border Background="Transparent" Width="22">
            <Button Content="✖" x:Name="RemoveButton" Height="22" VerticalAlignment="Top" FontSize="12" Foreground="DimGray"
                    Command="{commands:RemoveRow}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=models:Row}}"
                    Visibility="{Binding Converter={converters:ShowIf}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=IsMouseOver, ConverterParameter={StaticResource True}}"
                    Style="{StaticResource ButtonBaseStyle}" Template="{StaticResource ButtonTemplate}"/>
        </Border>
        
    </StackPanel>

</UserControl>